name: Deploy to Production

on:
  workflow_dispatch:  # Enables manual trigger
  # push:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - '**.md'
  #     - '.github/workflows/**'
  #     - 'docs/**'
  # pull_request:
  #   branches:
  #     - main
  #   types: [opened, synchronize, reopened]
  #   paths-ignore:
  #     - '**.md'
  #     - '.github/workflows/**'
  #     - 'docs/**'

env:
  APP_NAME: emir-app
  IMAGE_NAME: emir-app
  IMAGE_TAG: production-${{ github.run_id }}-${{ github.run_number }}
  ACR_REGISTRY: ${{ secrets.ACR_NAME }}.azurecr.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://${{ env.APP_NAME }}.azurewebsites.net
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push using ACR Tasks
        run: |
          echo "üèóÔ∏è Building image: ${{ env.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          az acr build --registry ${{ secrets.ACR_NAME }} \
            --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --image ${{ env.IMAGE_NAME }}:latest \
            --build-arg BUILD_VERSION=${{ env.IMAGE_TAG }} \
            .
      
      - name: Verify image
        run: |
          echo "‚úÖ Image built and pushed: ${{ env.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"

      - name: Deploy to Azure App Service
        id: deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: ${{ env.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Verify deployment
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üåê Application URL: https://${{ env.APP_NAME }}.azurewebsites.net"
          
      - name: Health check
        run: |
          echo "Performing health check..."
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.APP_NAME }}.azurewebsites.net/health || echo "Failed")
          if [ "$STATUS_CODE" = "200" ]; then
            echo "‚úÖ Health check passed"
          else
            echo "‚ùå Health check failed with status code: $STATUS_CODE"
            exit 1
          fi
          
      - name: Azure Logout
        if: always()
        run: az logout